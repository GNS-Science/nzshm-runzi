# Generated by ariadne-codegen
# Source: runzi/automation/scaling/toshi_api_codegen/queries.graphql

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class GetFileDetail(BaseModel):
    node: Optional[
        Annotated[
            Union["GetFileDetailNodeNode", "GetFileDetailNodeFileInterface"],
            Field(discriminator="typename__"),
        ]
    ]


class GetFileDetailNodeNode(BaseModel):
    typename__: Literal[
        "AggregateInversionSolution",
        "AutomationTask",
        "File",
        "GeneralTask",
        "InversionSolution",
        "InversionSolutionNrml",
        "Node",
        "ObjectIdentity",
        "OpenquakeHazardConfig",
        "OpenquakeHazardSolution",
        "OpenquakeHazardTask",
        "RuptureGenerationTask",
        "ScaledInversionSolution",
        "SmsFile",
        "StrongMotionStation",
        "Table",
        "TimeDependentInversionSolution",
    ] = Field(alias="__typename")


class GetFileDetailNodeFileInterface(BaseModel):
    typename__: Literal["FileInterface"] = Field(alias="__typename")
    file_name: Optional[str]
    file_size: Optional[Any]
    meta: Optional[List[Optional["GetFileDetailNodeFileInterfaceMeta"]]]
    file_url: Optional[str]


class GetFileDetailNodeFileInterfaceMeta(BaseModel):
    k: Optional[str]
    v: Optional[str]


GetFileDetail.model_rebuild()
GetFileDetailNodeFileInterface.model_rebuild()
