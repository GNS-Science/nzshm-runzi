# Generated by ariadne-codegen
# Source: runzi/automation/scaling/toshi_api_codegen/schema.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AggregationFn,
    EventResult,
    EventState,
    ModelType,
    OpenquakeTaskType,
    RowItemType,
    SmsSiteClass,
    SmsSiteClassBasis,
    TableType,
    TaskSubType,
)


class AppendInversionSolutionTablesInput(BaseModel):
    id: Optional[str] = None
    tables: List["LabelledTableRelationInput"]
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class AutomationTaskInput(BaseModel):
    result: EventResult
    state: EventState
    created: Any
    duration: Optional[float] = None
    arguments: Optional[List[Optional["KeyValuePairInput"]]] = None
    environment: Optional[List[Optional["KeyValuePairInput"]]] = None
    metrics: Optional[List[Optional["KeyValuePairInput"]]] = None


class AutomationTaskUpdateInput(BaseModel):
    task_id: str
    result: Optional[EventResult] = None
    state: Optional[EventState] = None
    duration: Optional[float] = None
    arguments: Optional[List[Optional["KeyValuePairInput"]]] = None
    environment: Optional[List[Optional["KeyValuePairInput"]]] = None
    metrics: Optional[List[Optional["KeyValuePairInput"]]] = None


class CreateAggregateInversionSolutionInput(BaseModel):
    file_name: Optional[str] = None
    md_5_digest: Optional[str] = Field(alias="md5_digest", default=None)
    file_size: Optional[Any] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    common_rupture_set: str
    source_solutions: List[str]
    aggregation_fn: AggregationFn
    produced_by: Optional[str] = None
    created: Optional[Any] = None
    predecessors: Optional[List[Optional["PredecessorInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateGeneralTaskInput(BaseModel):
    notes: Optional[str] = None
    subtask_count: Optional[int] = None
    subtask_type: Optional[TaskSubType] = None
    model_type: Optional[ModelType] = None
    subtask_result: Optional[EventResult] = None
    created: Optional[Any] = None
    agent_name: Optional[str] = None
    title: Optional[str] = None
    description: Optional[str] = None
    argument_lists: Optional[List[Optional["KeyValueListPairInput"]]] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateInversionSolutionInput(BaseModel):
    file_name: Optional[str] = None
    md_5_digest: Optional[str] = Field(alias="md5_digest", default=None)
    file_size: Optional[Any] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    created: Optional[Any] = None
    mfd_table_id: Optional[str] = None
    hazard_table_id: Optional[str] = None
    produced_by: Optional[str] = None
    predecessors: Optional[List[Optional["PredecessorInput"]]] = None
    tables: Optional[List[Optional["LabelledTableRelationInput"]]] = None
    metrics: Optional[List[Optional["KeyValuePairInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateInversionSolutionNrmlInput(BaseModel):
    file_name: Optional[str] = None
    md_5_digest: Optional[str] = Field(alias="md5_digest", default=None)
    file_size: Optional[Any] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    created: Optional[Any] = None
    source_solution: Optional[str] = None
    predecessors: Optional[List[Optional["PredecessorInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateOpenquakeHazardConfigInput(BaseModel):
    created: Optional[Any] = None
    source_models: Optional[List[Optional[str]]] = None
    template_archive: Optional[str] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateOpenquakeHazardSolutionInput(BaseModel):
    created: Optional[Any] = None
    produced_by: str
    csv_archive: Optional[str] = None
    hdf_5_archive: Optional[str] = Field(alias="hdf5_archive", default=None)
    task_args: Optional[str] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    metrics: Optional[List[Optional["KeyValuePairInput"]]] = None
    predecessors: Optional[List[Optional["PredecessorInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateScaledInversionSolutionInput(BaseModel):
    file_name: Optional[str] = None
    md_5_digest: Optional[str] = Field(alias="md5_digest", default=None)
    file_size: Optional[Any] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    source_solution: Optional[str] = None
    produced_by: Optional[str] = None
    created: Optional[Any] = None
    predecessors: Optional[List[Optional["PredecessorInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateStrongMotionStationInput(BaseModel):
    created: Optional[Any] = None
    updated: Optional[Any] = None
    site_code: Optional[str] = None
    site_class: Optional[SmsSiteClass] = None
    site_class_basis: Optional[SmsSiteClassBasis] = None
    vs_30_mean: Optional[List[Optional[float]]] = Field(alias="Vs30_mean", default=None)
    vs_30_std_dev: Optional[List[Optional[float]]] = Field(
        alias="Vs30_std_dev", default=None
    )
    bedrock_encountered: Optional[bool] = None
    liquefiable: Optional[bool] = None
    soft_clay_or_peat: Optional[bool] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateTableInput(BaseModel):
    name: Optional[str] = None
    object_id: Optional[str] = None
    created: Optional[Any] = None
    column_headers: Optional[List[Optional[str]]] = None
    column_types: Optional[List[Optional[RowItemType]]] = None
    rows: Optional[List[Optional[List[Optional[str]]]]] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    table_type: TableType
    dimensions: Optional[List[Optional["KeyValueListPairInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class CreateTimeDependentInversionSolutionInput(BaseModel):
    file_name: Optional[str] = None
    md_5_digest: Optional[str] = Field(alias="md5_digest", default=None)
    file_size: Optional[Any] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    source_solution: Optional[str] = None
    produced_by: Optional[str] = None
    created: Optional[Any] = None
    predecessors: Optional[List[Optional["PredecessorInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class KeyValueListPairInput(BaseModel):
    k: Optional[str] = None
    v: Optional[List[Optional[str]]] = None


class KeyValuePairInput(BaseModel):
    k: Optional[str] = None
    v: Optional[str] = None


class LabelledTableRelationInput(BaseModel):
    produced_by_id: Optional[str] = None
    label: Optional[str] = None
    table_id: Optional[str] = None
    table_type: Optional[TableType] = None
    dimensions: Optional[List[Optional["KeyValueListPairInput"]]] = None


class NewAutomationTaskInput(BaseModel):
    result: EventResult
    state: EventState
    created: Any
    duration: Optional[float] = None
    arguments: Optional[List[Optional["KeyValuePairInput"]]] = None
    environment: Optional[List[Optional["KeyValuePairInput"]]] = None
    metrics: Optional[List[Optional["KeyValuePairInput"]]] = None
    model_type: Optional[ModelType] = None
    task_type: TaskSubType


class OpenquakeHazardTaskInput(BaseModel):
    result: EventResult
    state: EventState
    created: Any
    duration: Optional[float] = None
    arguments: Optional[List[Optional["KeyValuePairInput"]]] = None
    environment: Optional[List[Optional["KeyValuePairInput"]]] = None
    metrics: Optional[List[Optional["KeyValuePairInput"]]] = None
    model_type: ModelType
    task_type: Optional[OpenquakeTaskType] = OpenquakeTaskType.HAZARD
    executor: Optional[str] = None
    srm_logic_tree: Optional[Any] = None
    gmcm_logic_tree: Optional[Any] = None
    openquake_config: Optional[Any] = None


class OpenquakeHazardTaskUpdateInput(BaseModel):
    task_id: str
    result: Optional[EventResult] = None
    state: Optional[EventState] = None
    duration: Optional[float] = None
    arguments: Optional[List[Optional["KeyValuePairInput"]]] = None
    environment: Optional[List[Optional["KeyValuePairInput"]]] = None
    metrics: Optional[List[Optional["KeyValuePairInput"]]] = None
    hazard_solution: Optional[str] = None
    executor: Optional[str] = None


class PredecessorInput(BaseModel):
    id: Optional[str] = None
    depth: Optional[int] = None


class UpdateGeneralTaskInput(BaseModel):
    created: Optional[Any] = None
    updated: Optional[Any] = None
    agent_name: Optional[str] = None
    title: Optional[str] = None
    description: Optional[str] = None
    notes: Optional[str] = None
    subtask_count: Optional[int] = None
    subtask_type: Optional[TaskSubType] = None
    model_type: Optional[ModelType] = None
    subtask_result: Optional[EventResult] = None
    task_id: str
    argument_lists: Optional[List[Optional["KeyValueListPairInput"]]] = None
    meta: Optional[List[Optional["KeyValuePairInput"]]] = None
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


AppendInversionSolutionTablesInput.model_rebuild()
AutomationTaskInput.model_rebuild()
AutomationTaskUpdateInput.model_rebuild()
CreateAggregateInversionSolutionInput.model_rebuild()
CreateGeneralTaskInput.model_rebuild()
CreateInversionSolutionInput.model_rebuild()
CreateInversionSolutionNrmlInput.model_rebuild()
CreateOpenquakeHazardSolutionInput.model_rebuild()
CreateScaledInversionSolutionInput.model_rebuild()
CreateTableInput.model_rebuild()
CreateTimeDependentInversionSolutionInput.model_rebuild()
LabelledTableRelationInput.model_rebuild()
NewAutomationTaskInput.model_rebuild()
OpenquakeHazardTaskInput.model_rebuild()
OpenquakeHazardTaskUpdateInput.model_rebuild()
UpdateGeneralTaskInput.model_rebuild()
